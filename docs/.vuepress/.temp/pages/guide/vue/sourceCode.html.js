import comp from "G:/HTMLFile/Vue/zx-blog/docs/.vuepress/.temp/pages/guide/vue/sourceCode.html.vue"
const data = JSON.parse("{\"path\":\"/guide/vue/sourceCode.html\",\"title\":\"Vue 源码与进阶测试题\",\"lang\":\"zh-CN\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"1. 为什么 Vue 不再使用 mixin 了\",\"slug\":\"_1-为什么-vue-不再使用-mixin-了\",\"link\":\"#_1-为什么-vue-不再使用-mixin-了\",\"children\":[{\"level\":3,\"title\":\"1.1 命名冲突\",\"slug\":\"_1-1-命名冲突\",\"link\":\"#_1-1-命名冲突\",\"children\":[]},{\"level\":3,\"title\":\"1.2 依赖不透明\",\"slug\":\"_1-2-依赖不透明\",\"link\":\"#_1-2-依赖不透明\",\"children\":[]},{\"level\":3,\"title\":\"1.3 对后续开发者不友好\",\"slug\":\"_1-3-对后续开发者不友好\",\"link\":\"#_1-3-对后续开发者不友好\",\"children\":[]}]},{\"level\":2,\"title\":\"2. 什么是插件？\",\"slug\":\"_2-什么是插件\",\"link\":\"#_2-什么是插件\",\"children\":[{\"level\":3,\"title\":\"2.2 使用插件\",\"slug\":\"_2-2-使用插件\",\"link\":\"#_2-2-使用插件\",\"children\":[]},{\"level\":3,\"title\":\"2.3 插件化机制原理\",\"slug\":\"_2-3-插件化机制原理\",\"link\":\"#_2-3-插件化机制原理\",\"children\":[]}]},{\"level\":2,\"title\":\"3. Composition API 和 optional API 的区别？\",\"slug\":\"_3-composition-api-和-optional-api-的区别\",\"link\":\"#_3-composition-api-和-optional-api-的区别\",\"children\":[]},{\"level\":2,\"title\":\"4. Vuex 的实现本质\",\"slug\":\"_4-vuex-的实现本质\",\"link\":\"#_4-vuex-的实现本质\",\"children\":[{\"level\":3,\"title\":\"4.1 Vuex 实现原理\",\"slug\":\"_4-1-vuex-实现原理\",\"link\":\"#_4-1-vuex-实现原理\",\"children\":[]}]},{\"level\":2,\"title\":\"5. 手写 Vue-Router\",\"slug\":\"_5-手写-vue-router\",\"link\":\"#_5-手写-vue-router\",\"children\":[]},{\"level\":2,\"title\":\"6. Vue2 的 diff 原理\",\"slug\":\"_6-vue2-的-diff-原理\",\"link\":\"#_6-vue2-的-diff-原理\",\"children\":[{\"level\":3,\"title\":\"6.1 patch\",\"slug\":\"_6-1-patch\",\"link\":\"#_6-1-patch\",\"children\":[]},{\"level\":3,\"title\":\"6.2 patchVnode\",\"slug\":\"_6-2-patchvnode\",\"link\":\"#_6-2-patchvnode\",\"children\":[]},{\"level\":3,\"title\":\"6.3 updateChildren\",\"slug\":\"_6-3-updatechildren\",\"link\":\"#_6-3-updatechildren\",\"children\":[]}]},{\"level\":2,\"title\":\"7. Vue3 的 diff 原理\",\"slug\":\"_7-vue3-的-diff-原理\",\"link\":\"#_7-vue3-的-diff-原理\",\"children\":[{\"level\":3,\"title\":\"7.1 前置与后置的预处理\",\"slug\":\"_7-1-前置与后置的预处理\",\"link\":\"#_7-1-前置与后置的预处理\",\"children\":[]},{\"level\":3,\"title\":\"7.2 判断是否需要移动\",\"slug\":\"_7-2-判断是否需要移动\",\"link\":\"#_7-2-判断是否需要移动\",\"children\":[]},{\"level\":3,\"title\":\"7.3 DOM 如何移动\",\"slug\":\"_7-3-dom-如何移动\",\"link\":\"#_7-3-dom-如何移动\",\"children\":[]}]},{\"level\":2,\"title\":\"8. Vue3.0 性能提升主要是通过哪几方面体现的？\",\"slug\":\"_8-vue3-0-性能提升主要是通过哪几方面体现的\",\"link\":\"#_8-vue3-0-性能提升主要是通过哪几方面体现的\",\"children\":[{\"level\":3,\"title\":\"8.1 编译阶段\",\"slug\":\"_8-1-编译阶段\",\"link\":\"#_8-1-编译阶段\",\"children\":[]}]},{\"level\":2,\"title\":\"8.2 源码体积\",\"slug\":\"_8-2-源码体积\",\"link\":\"#_8-2-源码体积\",\"children\":[]},{\"level\":2,\"title\":\"8.3 响应式系统\",\"slug\":\"_8-3-响应式系统\",\"link\":\"#_8-3-响应式系统\",\"children\":[]}],\"git\":{\"updatedTime\":null,\"contributors\":[]},\"filePathRelative\":\"guide/vue/sourceCode.md\",\"excerpt\":\"\\n<h2>1. 为什么 Vue 不再使用 mixin 了</h2>\\n<h3>1.1 命名冲突</h3>\\n<p>我们看到了 mixin 模式如何在运行时合并两个对象。如果他们两个都共享同名属性，会发生什么？</p>\\n<div class=\\\"language-javascript\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> mixin <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function-variable function\\\">data</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">myProp</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">mixins</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>mixin<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token function-variable function\\\">data</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 同名!</span>\\n    <span class=\\\"token literal-property property\\\">myProp</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
